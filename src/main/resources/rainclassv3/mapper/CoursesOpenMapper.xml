<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="rainclassv3.mapper.CoursesOpenMapper">
  <resultMap id="BaseResultMap" type="rainclassv3.pojo.CoursesOpen">
    <constructor>
      <idArg column="courses_open_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="courses_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="teacher_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="school_year" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="term" javaType="java.lang.Boolean" jdbcType="BIT" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    courses_open_id, courses_id, teacher_id, school_year, term
  </sql>
  <select id="selectByExample" parameterType="rainclassv3.pojo.CoursesOpenExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from courses_open
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from courses_open
    where courses_open_id = #{coursesOpenId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from courses_open
    where courses_open_id = #{coursesOpenId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="rainclassv3.pojo.CoursesOpenExample">
    delete from courses_open
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="rainclassv3.pojo.CoursesOpen">
    insert into courses_open (courses_open_id, courses_id, teacher_id, 
      school_year, term)
    values (#{coursesOpenId,jdbcType=INTEGER}, #{coursesId,jdbcType=INTEGER}, #{teacherId,jdbcType=INTEGER}, 
      #{schoolYear,jdbcType=VARCHAR}, #{term,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="rainclassv3.pojo.CoursesOpen">
    insert into courses_open
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="coursesOpenId != null">
        courses_open_id,
      </if>
      <if test="coursesId != null">
        courses_id,
      </if>
      <if test="teacherId != null">
        teacher_id,
      </if>
      <if test="schoolYear != null">
        school_year,
      </if>
      <if test="term != null">
        term,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="coursesOpenId != null">
        #{coursesOpenId,jdbcType=INTEGER},
      </if>
      <if test="coursesId != null">
        #{coursesId,jdbcType=INTEGER},
      </if>
      <if test="teacherId != null">
        #{teacherId,jdbcType=INTEGER},
      </if>
      <if test="schoolYear != null">
        #{schoolYear,jdbcType=VARCHAR},
      </if>
      <if test="term != null">
        #{term,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="rainclassv3.pojo.CoursesOpenExample" resultType="java.lang.Long">
    select count(*) from courses_open
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update courses_open
    <set>
      <if test="record.coursesOpenId != null">
        courses_open_id = #{record.coursesOpenId,jdbcType=INTEGER},
      </if>
      <if test="record.coursesId != null">
        courses_id = #{record.coursesId,jdbcType=INTEGER},
      </if>
      <if test="record.teacherId != null">
        teacher_id = #{record.teacherId,jdbcType=INTEGER},
      </if>
      <if test="record.schoolYear != null">
        school_year = #{record.schoolYear,jdbcType=VARCHAR},
      </if>
      <if test="record.term != null">
        term = #{record.term,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update courses_open
    set courses_open_id = #{record.coursesOpenId,jdbcType=INTEGER},
      courses_id = #{record.coursesId,jdbcType=INTEGER},
      teacher_id = #{record.teacherId,jdbcType=INTEGER},
      school_year = #{record.schoolYear,jdbcType=VARCHAR},
      term = #{record.term,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="rainclassv3.pojo.CoursesOpen">
    update courses_open
    <set>
      <if test="coursesId != null">
        courses_id = #{coursesId,jdbcType=INTEGER},
      </if>
      <if test="teacherId != null">
        teacher_id = #{teacherId,jdbcType=INTEGER},
      </if>
      <if test="schoolYear != null">
        school_year = #{schoolYear,jdbcType=VARCHAR},
      </if>
      <if test="term != null">
        term = #{term,jdbcType=BIT},
      </if>
    </set>
    where courses_open_id = #{coursesOpenId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="rainclassv3.pojo.CoursesOpen">
    update courses_open
    set courses_id = #{coursesId,jdbcType=INTEGER},
      teacher_id = #{teacherId,jdbcType=INTEGER},
      school_year = #{schoolYear,jdbcType=VARCHAR},
      term = #{term,jdbcType=BIT}
    where courses_open_id = #{coursesOpenId,jdbcType=INTEGER}
  </update>
</mapper>